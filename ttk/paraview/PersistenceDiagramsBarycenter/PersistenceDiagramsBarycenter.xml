<ServerManagerConfiguration>

  <!-- This is the server manager configuration XML. It defines the interface to
       our new filter. As a rule of thumb, try to locate the configuration for
       a filter already in ParaView (in Servers/ServerManager/Resources/*.xml)
       that matches your filter and then model your xml on it -->
  <ProxyGroup name="filters">
   <SourceProxy
     name="PersistenceDiagramsBarycenter"
     class="ttkPersistenceDiagramsBarycenter"
     label="TTK PersistenceDiagramsBarycenter">
     <Documentation
        long_help="TTK plugin that takes an input ensemble data set (represented
by a list of scalar fields) and which computes various vertexwise statistics
(PDF estimation, bounds, moments, etc.)."
        short_help="TTK plugin that takes an input ensemble data set
(represented
by a list of scalar fields) and which computes various vertexwise statistics
(PDF estimation, bounds, moments, etc.).">
          TTK plugin that takes an input ensemble data set (represented
by a list of scalar fields) and which computes various vertexwise statistics
(PDF estimation, bounds, moments, etc.).

See also MandatoryCriticalPoints.
     </Documentation>
     <InputProperty
        name="Input"
        command="AddInputConnection"
        multiple_input="1">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <InputArrayDomain name="input_scalars" number_of_components="1">
          <Property name="Input" function="FieldDataSelection" />
        </InputArrayDomain>
        <Documentation>
          Data-set to process.
        </Documentation>
      </InputProperty>

	   <StringVectorProperty
          name="n"
          label="p parameter"
          command="SetWassersteinMetric"
          number_of_elements="1"
          default_values="2" >
        <Documentation>
          Value of the parameter p for the Wp (p-th Wasserstein) distance
computation (type "inf" for the Bottleneck distance).
        </Documentation>
      </StringVectorProperty>

       <IntVectorProperty
          name="Deterministic"
          label="Kill randomness"
          command="SetDeterministic"
          number_of_elements="1"
	  default_values="0"
	 panel_visibility = "advanced" >
       	<BooleanDomain name="bool"/>
	 <Documentation>
		 For a deterministic algorithm.
		 Kill any randomness in the initialization of barycenters.
	 </Documentation>
      </IntVectorProperty>

       <IntVectorProperty
          name="Method"
          label="Algorithm for the assignments"
          command="SetMethod"
          number_of_elements="1"
          default_values="0" >
		 <EnumerationDomain name="enum">
          <Entry value="0" text="Partial Bidding Algorithm"/>
          <Entry value="1" text="TTK Munkres Algorithm"/>
          <Entry value="2" text="Approximate Auction Algorithm"/>
        </EnumerationDomain>
        <Documentation>
          Type of algorithm for the computation of the matching.
		  Either the exact Munkres algorithm or the Approximate Auction
		  Algorithm.
		  The Auction algorithm is computationally less expensive than
		  the Munkres Algorithm.
        </Documentation>
      </IntVectorProperty>
	  <IntVectorProperty
        name="UseProgressive"
        command="SetUseProgressive"
        label="Compute Progressive Barycenter"
        number_of_elements="1"
        default_values="1"
        panel_visibility="advanced">
        <BooleanDomain name="bool"/>
		        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Method"
                                   value="0" />
          <!-- enable this widget when <property> equals <value> -->
        </Hints>
        <Documentation>
          If set to true, the barycenter is computed progressively (starting with most persistent pairs).
		  The option may turn useful coupled with Time Limit since the Barycenter will be computed with only a portion of the
		  input points if computation time gets too important.
        </Documentation>
      </IntVectorProperty>


	  <DoubleVectorProperty
          name="TimeLimit"
          label="Maximal computation time (s)"
          command="SetTimeLimit"
          number_of_elements="1"
          default_values="3600"
          panel_visibility="advanced"
          >
		 <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Method"
                                   value="0" />
          <!-- enable this widget when <property> equals <value> -->
        </Hints>
        <Documentation>
          Maximal time of computation for the computation of the barycenter.
		  Since Min/Saddle, Saddle/Saddle and Saddle/Max pairs are treated separatly, the actual computation time could be
		  three times the decided limit.
		  A low value of Time Limit will yield approximate results. Use with caution.
        </Documentation>
      </DoubleVectorProperty>



	  <IntVectorProperty
         name="EarlyStoppage"
         label="EarlyStoppage"
         command="SetEarlyStoppage"
         number_of_elements="1"
         default_values="1" >
        <BooleanDomain name="bool"/>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Method"
                                   value="0" />
          <!-- enable this widget when <property> equals <value> -->
        </Hints>
         <Documentation>

         </Documentation>
      </IntVectorProperty>

	  <IntVectorProperty
         name="ReinitPrices"
         label="ReinitPrices"
         command="SetReinitPrices"
         number_of_elements="1"
         default_values="1" panel_visibility="advanced">
        <BooleanDomain name="bool"/>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Method"
                                   value="0" />
          <!-- enable this widget when <property> equals <value> -->
        </Hints>
         <Documentation>
          Reinitialize the prices for each Auction Iteration. Slower.
         </Documentation>
      </IntVectorProperty>

	  <IntVectorProperty
         name="EpsilonDecreases"
         label="EpsilonDecreases"
         command="SetEpsilonDecreases"
         number_of_elements="1"
         default_values="1" panel_visibility="advanced">
        <BooleanDomain name="bool"/>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="UseProgressive"
                                   value="0" />
          <!-- enable this widget when <property> equals <value> -->
        </Hints>
         <Documentation>
          Use all available cores.
         </Documentation>
      </IntVectorProperty>


      <DoubleVectorProperty
          name="Alpha"
          label="Diagram blending"
          command="SetAlpha"
          number_of_elements="1"
          default_values="1"
          panel_visibility="advanced"
          >
        <DoubleRangeDomain name="alpha" min="0.0" max="1.0"/>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Method"
                                   value="0" />
          <!-- enable this widget when <property> equals <value> -->
        </Hints>
        <Documentation>
          Blending coefficient for the cost evaluation of each critical point
matching. By default (1), only distances  in
the persistence diagrams are considered between matched critical points. When
set to 0, only distances in the original 3D domain are considered
between matched critical points.
        </Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
          name="Lambda"
          label="Extremas weight in blending"
          command="SetLambda"
          number_of_elements="1"
          default_values="1"
          panel_visibility="advanced"
          >
        <DoubleRangeDomain name="lambda" min="0.0" max="1.0"/>
        <Documentation>
          Parametrizes the point used for the geometrical coordinates of the persistence pair.
          Set to 1 to choose the potential extremum, for an increased stability.
          Set to 0 to choose the other point (saddle point). Not advised, awful stability.
          Set to 0.5 to choose the geometrical middle of the pair points (bad stability)
        </Documentation>
        </DoubleVectorProperty>

        <IntVectorProperty
          name="interruption_iter_"
          label="Stop at iteration :"
          command="SetStop"
          number_of_elements="1"
          default_values="-1"
          panel_visibility="advanced"
          >
        <IntRangeDomain name="range" min="-1" max="100"/>
        <Documentation>
        </Documentation>
      </IntVectorProperty>

	      <IntVectorProperty
         name="UseAllCores"
         label="Use All Cores"
         command="SetUseAllCores"
         number_of_elements="1"
         default_values="1" panel_visibility="advanced">
        <BooleanDomain name="bool"/>
         <Documentation>
          Use all available cores.
         </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="ThreadNumber"
         label="Thread Number"
         command="SetThreadNumber"
         number_of_elements="1"
         default_values="1" panel_visibility="advanced">
        <IntRangeDomain name="range" min="1" max="100" />
         <Documentation>
          Thread number.
         </Documentation>
      </IntVectorProperty>

	  <IntVectorProperty
        name="Output matchings"
        command="SetUseOutputMatching"
        label="Display the matchings with line segments"
        number_of_elements="1"
        default_values="0"
        panel_visibility="advanced">
        <BooleanDomain name="bool"/>
        <Documentation>
          Display the matching between pairs of the persistence diagrams with
line segments in 3D.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
         name="DebugLevel"
         label="Debug Level"
         command="SetdebugLevel_"
         number_of_elements="1"
         default_values="1" panel_visibility="advanced">
        <IntRangeDomain name="range" min="0" max="100" />
         <Documentation>
           Debug level.
         </Documentation>
      </IntVectorProperty>

      <PropertyGroup panel_widget="Line" label="Testing">
        <Property name="UseAllCores" />
        <Property name="ThreadNumber" />
        <Property name="DebugLevel" />
      </PropertyGroup>




      <OutputPort name="Barycenter" index="0" id="port0" />
      <OutputPort name="Matchings" index="1" id="port1" />
      <OutputPort name="Initial Diagrams" index="2" id="port2" />

      <Hints>
        <ShowInMenu category="TTK - Uncertain Scalar Data" />
      </Hints>
   </SourceProxy>
 </ProxyGroup>
</ServerManagerConfiguration>
